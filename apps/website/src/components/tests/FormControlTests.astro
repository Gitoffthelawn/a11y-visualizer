---
import CategoryTitle from "./CategoryTitle.astro";
import CategorySectionTitle from "./CategorySectionTitle.astro";
import ExampleCard from "./ExampleCard.astro";
import { createLocalT } from "../../lib/i18n";
import { en, ja } from "./FormControlTests.lang";

const formClasses =
  "border border-zinc-300 dark:border-zinc-600 rounded p-2 bg-white dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100 outline-offset-2";
interface Props {
  lang?: string;
}
const lang = (Astro.props as Props).lang || "en";
const t = createLocalT(lang === "ja" ? ja : en, en);
---

<CategoryTitle id="form-controls">{t("title")}</CategoryTitle>
<p class="text-zinc-700 dark:text-zinc-300 mb-6">{t("intro")}</p>

<CategorySectionTitle id="text-inputs"
  >{t("sections.textInputs.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.textInputs.withoutLabel.title")}
  description={t("examples.textInputs.withoutLabel.desc")}
>
  <input type="text" class={formClasses} />
</ExampleCard>

<ExampleCard
  title={t("examples.textInputs.withLabel.title")}
  description={t("examples.textInputs.withLabel.desc")}
>
  <label
    for="inputWithLabel"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Name:
  </label>
  <input type="text" id="inputWithLabel" class={formClasses} />
</ExampleCard>

<ExampleCard
  title={t("examples.textInputs.insideLabel.title")}
  description={t("examples.textInputs.insideLabel.desc")}
>
  <label class="flex flex-col justify-start items-start gap-1">
    <span class="text-zinc-700 dark:text-zinc-300">Name:</span>
    <input type="text" id="inputWithLabel" class={formClasses} />
  </label>
</ExampleCard>

<CategorySectionTitle id="select-elements"
  >{t("sections.selectElements.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.selectElements.withoutLabel.title")}
  description={t("examples.selectElements.withoutLabel.desc")}
>
  <select class={formClasses}>
    <option value="apple">Apple</option>
    <option value="banana">Banana</option>
    <option value="cherry">Cherry</option>
  </select>
</ExampleCard>

<ExampleCard
  title={t("examples.selectElements.withLabel.title")}
  description={t("examples.selectElements.withLabel.desc")}
>
  <label
    for="selectWithLabel"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    What is your favorite fruit?
  </label>
  <select id="selectWithLabel" class={formClasses}>
    <option value="apple">Apple</option>
    <option value="banana">Banana</option>
    <option value="cherry">Cherry</option>
  </select>
</ExampleCard>

<CategorySectionTitle id="textarea-elements"
  >{t("sections.textareaElements.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.textarea.withoutLabel.title")}
  description={t("examples.textarea.withoutLabel.desc")}
>
  <textarea class={`${formClasses} border-red-300 dark:border-red-600`}
  ></textarea>
</ExampleCard>

<ExampleCard
  title={t("examples.textarea.withLabel.title")}
  description={t("examples.textarea.withLabel.desc")}
>
  <label
    for="textareaWithLabel"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Comments
  </label>
  <textarea id="textareaWithLabel" class={formClasses}></textarea>
</ExampleCard>

<CategorySectionTitle id="checkboxes"
  >{t("sections.checkboxes.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.checkbox.withLabels.title")}
  description={t("examples.checkbox.withLabels.desc")}
>
  <div class="flex flex-wrap gap-3">
    <span class="flex items-center gap-1">
      <input type="checkbox" id="checkbox1" />
      <label for="checkbox1" class="text-zinc-700 dark:text-zinc-300"
        >Checkbox 1</label
      >
    </span>
    <span class="flex items-center gap-1">
      <input type="checkbox" id="checkbox2" />
      <label for="checkbox2" class="text-zinc-700 dark:text-zinc-300"
        >Checkbox 2</label
      >
    </span>
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.checkbox.withoutLabels.title")}
  description={t("examples.checkbox.withoutLabels.desc")}
>
  <div class="flex flex-wrap gap-3">
    <span class="flex items-center gap-1">
      <input
        type="checkbox"
        id="checkboxWithoutLabel1"
        class="border-red-300"
      />
      <span class="text-zinc-700 dark:text-zinc-300">Checkbox 1</span>
    </span>
    <span class="flex items-center gap-1">
      <input
        type="checkbox"
        id="checkboxWithoutLabel2"
        class="border-red-300"
      />
      <span class="text-zinc-700 dark:text-zinc-300">Checkbox 2</span>
    </span>
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.checkbox.customDisplayNone.title")}
  description={t("examples.checkbox.customDisplayNone.desc")}
>
  <div class="cool-checkbox">
    <input type="checkbox" id="cool-checkbox" style="display: none;" />
    <label
      for="cool-checkbox"
      class="pl-7 relative text-zinc-700 dark:text-zinc-300 cursor-pointer"
    >
      Cool Checkbox
    </label>
  </div>

  <style>
    .cool-checkbox label::before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      margin: auto;
      display: inline-block;
      width: 1.5rem;
      height: 1.5rem;
      border: 0.125rem solid #666;
      border-radius: 0.25rem;
    }
    .cool-checkbox input:checked + label::before {
      background-color: #474;
      border-color: #474;
    }
    .cool-checkbox input:checked + label::after {
      content: "";
      position: absolute;
      left: 0.25rem;
      top: 0.4rem;
      width: 1rem;
      height: 0.5rem;
      border-left: 0.175rem solid #fff;
      border-bottom: 0.175rem solid #fff;
      rotate: -45deg;
    }
  </style>
</ExampleCard>

<CategorySectionTitle id="radio-buttons"
  >{t("sections.radioButtons.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.radio.withLabels.title")}
  description={t("examples.radio.withLabels.desc")}
>
  <fieldset class="flex flex-col gap-3">
    <legend class="text-zinc-700 dark:text-zinc-300">
      What is your favorite color?
    </legend>
    <div class="flex flex-wrap gap-3">
      <span class="flex items-center gap-1">
        <input type="radio" id="radio1" name="radio" />
        <label for="radio1" class="text-zinc-700 dark:text-zinc-300">red</label>
      </span>
      <span class="flex items-center gap-1">
        <input type="radio" id="radio2" name="radio" />
        <label for="radio2" class="text-zinc-700 dark:text-zinc-300"
          >green</label
        >
      </span>
      <span class="flex items-center gap-1">
        <input type="radio" id="radio3" name="radio" />
        <label for="radio3" class="text-zinc-700 dark:text-zinc-300">blue</label
        >
      </span>
    </div>
  </fieldset>
</ExampleCard>

<ExampleCard
  title={t("examples.radio.withoutLabels.title")}
  description={t("examples.radio.withoutLabels.desc")}
>
  <div class="flex flex-wrap gap-3">
    <span class="flex items-center gap-1">
      <input
        type="radio"
        id="radioWithoutLabel1"
        name="radioWithoutLabel"
        class="border-red-300"
      />
      <span class="text-zinc-700 dark:text-zinc-300">Radio 1</span>
    </span>
    <span class="flex items-center gap-1">
      <input
        type="radio"
        id="radioWithoutLabel2"
        name="radioWithoutLabel"
        class="border-red-300"
      />
      <span class="text-zinc-700 dark:text-zinc-300">Radio 2</span>
    </span>
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.radio.withoutName.title")}
  description={t("examples.radio.withoutName.desc")}
>
  <div class="flex flex-wrap gap-3">
    <span class="flex items-center gap-1">
      <input type="radio" id="radioWithoutName1" />
      <label for="radioWithoutName1" class="text-zinc-700 dark:text-zinc-300"
        >Radio 1</label
      >
    </span>
    <span class="flex items-center gap-1">
      <input type="radio" id="radioWithoutName2" />
      <label for="radioWithoutName2" class="text-zinc-700 dark:text-zinc-300"
        >Radio 2</label
      >
    </span>
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.radio.differentName.title")}
  description={t("examples.radio.differentName.desc")}
>
  <div class="flex flex-wrap gap-3">
    <span class="flex items-center gap-1">
      <input
        type="radio"
        id="radioFailedGrouping1"
        name="radioFailedGrouping1"
      />
      <label for="radioFailedGrouping1" class="text-zinc-700 dark:text-zinc-300"
        >Radio 1</label
      >
    </span>
    <span class="flex items-center gap-1">
      <input
        type="radio"
        id="radioFailedGrouping2"
        name="radioFailedGrouping2"
      />
      <label for="radioFailedGrouping2" class="text-zinc-700 dark:text-zinc-300"
        >Radio 2</label
      >
    </span>
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.radio.single.title")}
  description={t("examples.radio.single.desc")}
>
  <input type="radio" id="radioSingle" name="radioSingle" />
  <label for="radioSingle" class="text-zinc-700 dark:text-zinc-300">Radio</label
  >
</ExampleCard>

<CategorySectionTitle id="label-issues"
  >{t("sections.labelIssues.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.labels.orphaned.title")}
  description={t("examples.labels.orphaned.desc")}
>
  <label class="text-zinc-700 dark:text-zinc-300 border-red-300 border p-1"
    >Orphaned Label</label
  >
</ExampleCard>

<ExampleCard
  title={t("examples.labels.missingId.title")}
  description={t("examples.labels.missingId.desc")}
>
  <label
    for="non-existent-input"
    class="text-zinc-700 dark:text-zinc-300 border-red-300 border p-1 block mb-2"
  >
    Label for missing input
  </label>
  <p class="text-sm text-zinc-600 dark:text-zinc-400">
    The input with id="non-existent-input" doesn't exist in the document.
  </p>
</ExampleCard>

<CategorySectionTitle id="input-states"
  >{t("sections.inputStates.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.states.required.title")}
  description={t("examples.states.required.desc")}
>
  <label
    for="requiredInput"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Required Input *
  </label>
  <input id="requiredInput" type="text" class={formClasses} required />
</ExampleCard>

<ExampleCard
  title={t("examples.states.readonly.title")}
  description={t("examples.states.readonly.desc")}
>
  <label
    for="readonlyInput"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Read-only Input
  </label>
  <input
    id="readonlyInput"
    type="text"
    value="Cannot be edited"
    class={`${formClasses} bg-zinc-100 dark:bg-zinc-700`}
    readonly
  />
</ExampleCard>

<CategorySectionTitle id="editable-elements"
  >{t("sections.editableElements.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.editable.noRole.title")}
  description={t("examples.editable.noRole.desc")}
>
  <div
    id="contenteditable-no-role-label"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Contenteditable without role
  </div>
  <div
    id="contenteditable-no-role"
    contenteditable="true"
    class={`${formClasses} min-h-[3rem] border-yellow-300 dark:border-yellow-600`}
    style="outline: none;"
    aria-labelledby="contenteditable-no-role-label"
  >
    Edit this text directly...
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.editable.textboxLabelled.title")}
  description={t("examples.editable.textboxLabelled.desc")}
>
  <div
    id="contenteditable-textbox-label"
    class="block mb-1 text-zinc-700 dark:text-zinc-300"
  >
    Contenteditable with textbox role
  </div>
  <div
    id="contenteditable-textbox"
    contenteditable="true"
    role="textbox"
    class={`${formClasses} min-h-[3rem]`}
    style="outline: none;"
    aria-multiline="false"
    aria-labelledby="contenteditable-textbox-label"
  >
    Edit this text directly...
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.editable.noLabel.title")}
  description={t("examples.editable.noLabel.desc")}
>
  <div
    contenteditable="true"
    role="textbox"
    class={`${formClasses} min-h-[3rem] border-red-300 dark:border-red-600`}
    style="outline: none;"
    aria-multiline="false"
  >
    Unlabeled editable text...
  </div>
</ExampleCard>
