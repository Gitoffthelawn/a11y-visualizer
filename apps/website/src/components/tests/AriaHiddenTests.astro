---
import CategoryTitle from "./CategoryTitle.astro";
import CategorySectionTitle from "./CategorySectionTitle.astro";
import ExampleCard from "./ExampleCard.astro";
import { createLocalT } from "../../lib/i18n";
import en from "./AriaHiddenTests.lang.en";
import ja from "./AriaHiddenTests.lang.ja";

interface Props {
  lang?: string;
}
const lang = (Astro.props as Props).lang || "en";
const t = createLocalT(lang === "ja" ? ja : en, en);
---

<CategoryTitle id="aria-hidden">{t("title")}</CategoryTitle>
<p class="text-zinc-700 dark:text-zinc-300 mb-6">{t("intro")}</p>

<CategorySectionTitle id="visible-content"
  >{t("sections.visible.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.visible.false.title")}
  description={t("examples.visible.false.desc")}
>
  <p aria-hidden="false" class="text-zinc-900 dark:text-zinc-100">
    This text is visible and accessible to screen readers.
  </p>
</ExampleCard>

<ExampleCard
  title={t("examples.visible.true.title")}
  description={t("examples.visible.true.desc")}
>
  <p
    aria-hidden="true"
    class="text-zinc-900 dark:text-zinc-100 border border-red-300 dark:border-red-600 p-2 bg-red-50 dark:bg-red-900/20"
  >
    This text is visible but hidden from screen readers - problematic!
  </p>
</ExampleCard>

<CategorySectionTitle id="hidden-content"
  >{t("sections.hidden.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.hidden.true.title")}
  description={t("examples.hidden.true.desc")}
>
  <div>
    <p class="text-zinc-900 dark:text-zinc-100">Main content here</p>
    <p aria-hidden="true" style="display: none;" class="text-zinc-500">
      This decorative text is properly hidden from all users.
    </p>
  </div>
</ExampleCard>

<CategorySectionTitle id="icons"
  >{t("sections.icons.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.icons.decorativeTrue.title")}
  description={t("examples.icons.decorativeTrue.desc")}
>
  <button
    class="bg-teal-700 text-white px-4 py-2 rounded hover:bg-teal-800 transition-colors flex items-center gap-2"
  >
    <svg
      aria-hidden="true"
      width="24"
      height="24"
      viewBox="0 0 16 16"
      fill="currentColor"
    >
      <path
        d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"
      ></path>
    </svg>
    Save to GitHub
  </button>
</ExampleCard>

<ExampleCard
  title={t("examples.icons.importantNoHidden.title")}
  description={t("examples.icons.importantNoHidden.desc")}
>
  <div
    class="flex items-center gap-2 p-3 border border-red-300 dark:border-red-600 rounded bg-red-50 dark:bg-red-900/20"
  >
    <svg
      width="24"
      height="24"
      viewBox="0 0 20 20"
      fill="currentColor"
      class="text-red-600"
    >
      <path
        fill-rule="evenodd"
        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
        clip-rule="evenodd"></path>
    </svg>
    <span class="text-zinc-900 dark:text-zinc-100"
      >This is an error message</span
    >
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.icons.accessibleLabeled.title")}
  description={t("examples.icons.accessibleLabeled.desc")}
>
  <div
    class="flex items-center gap-2 p-3 border border-green-300 dark:border-green-600 rounded bg-green-50 dark:bg-green-900/20"
  >
    <svg
      aria-label="Error"
      width="24"
      height="24"
      viewBox="0 0 20 20"
      fill="currentColor"
      class="text-red-600"
    >
      <path
        fill-rule="evenodd"
        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
        clip-rule="evenodd"></path>
    </svg>
    <span class="text-zinc-900 dark:text-zinc-100"
      >This is an error message</span
    >
  </div>
</ExampleCard>
