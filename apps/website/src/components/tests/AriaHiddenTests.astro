---
import CategoryTitle from "./CategoryTitle.astro";
import CategorySectionTitle from "./CategorySectionTitle.astro";
import ExampleCard from "./ExampleCard.astro";
import { createLocalT } from "../../lib/i18n";
import { en, ja } from "./AriaHiddenTests.lang";
import { IoLogoGithub, IoAlertCircle } from "react-icons/io5";

interface Props {
  lang?: string;
}
const lang = (Astro.props as Props).lang || "en";
const t = createLocalT(lang === "ja" ? ja : en, en);
---

<CategoryTitle id="aria-hidden">{t("title")}</CategoryTitle>
<p class="text-zinc-700 dark:text-zinc-300 mb-6">{t("intro")}</p>

<CategorySectionTitle id="visible-content"
  >{t("sections.visible.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.visible.false.title")}
  description={t("examples.visible.false.desc")}
>
  <p aria-hidden="false" class="text-zinc-900 dark:text-zinc-100">
    {t("examples.visible.false.content")}
  </p>
</ExampleCard>

<ExampleCard
  title={t("examples.visible.true.title")}
  description={t("examples.visible.true.desc")}
>
  <p
    aria-hidden="true"
    class="text-zinc-900 dark:text-zinc-100 border border-red-300 dark:border-red-600 p-2 bg-red-50 dark:bg-red-900/20"
  >
    {t("examples.visible.true.content")}
  </p>
</ExampleCard>

<CategorySectionTitle id="icons"
  >{t("sections.icons.title")}</CategorySectionTitle
>

<ExampleCard
  title={t("examples.icons.decorativeTrue.title")}
  description={t("examples.icons.decorativeTrue.desc")}
>
  <button
    class="bg-teal-700 text-white px-4 py-2 rounded hover:bg-teal-800 transition-colors flex items-center gap-2"
  >
    <IoLogoGithub aria-hidden="true" size={24} />
    Save to GitHub
  </button>
</ExampleCard>

<ExampleCard
  title={t("examples.icons.importantNoHidden.title")}
  description={t("examples.icons.importantNoHidden.desc")}
>
  <div
    class="flex items-center gap-2 p-3 border border-red-300 dark:border-red-600 rounded bg-red-50 dark:bg-red-900/20"
  >
    <IoAlertCircle className="text-red-600" size={24} />
    <span class="text-zinc-900 dark:text-zinc-100"
      >{t("examples.icons.importantNoHidden.content")}</span
    >
  </div>
</ExampleCard>

<ExampleCard
  title={t("examples.icons.accessibleLabeled.title")}
  description={t("examples.icons.accessibleLabeled.desc")}
>
  <div
    class="flex items-center gap-2 p-3 border border-green-300 dark:border-green-600 rounded bg-green-50 dark:bg-green-900/20"
  >
    <IoAlertCircle
      className="text-red-600"
      size={24}
      role="img"
      aria-label={t("examples.icons.accessibleLabeled.icon")}
    />
    <span class="text-zinc-900 dark:text-zinc-100"
      >{t("examples.icons.importantNoHidden.content")}</span
    >
  </div>
</ExampleCard>
